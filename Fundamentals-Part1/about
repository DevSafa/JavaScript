*index.html is an html file because usually JavaScript is attached to web pages , 
    at lesat when we are building front end application.
* to start we always need an html document .
*in HTMl there is a script tag where we can write JavaScript

*developer console is just an environment that was built to execute small pieces of code
    and then shows results immediatly.

*whenever we want to access the developer console we use the console.log() function.
*console.log() is like building a bridge between our script  and the developer console on the other side.

<script>

     console.log(40 + 8 + 23 - 10);
</script>

*the script tag in HTMl page is an inline script
*an inline script is a script that is not loaded from an external file , but embedded inside HTML
*the only  advantage of inline script is we don't have to load another file ,
    but on the other hand is pretty bad for separating the web site content from teh javascript logic,
    so usually we use external javaScript files.
*connecting HTML file  to JavaScript file is usually done at the end using script tag 
    and specifying the src attribute to specify the path to js file.
*Linking a JavaScript file    
    <script src ="script.js" ></script>

-------------------------------------------------------------

Values and Variables
*a value is basically a piece of data , the most fundamental unit that we have in programming.
*a value is the smallest unit of information that we have in JavaScript
    'Jonas' is a value.
*we can store values in variables so we can reuse them over and over again.

*conventions and rules for naming variables
    -Camel case rule is a standard in JavaScript world
        Camel case (stylized as camelCase or CamelCase; also known as camel caps or more formally as medial capitals)
        is the practice of writing phrases without spaces or punctuation, indicating the separation of words with a 
        single capitalized letter, and the first word starting with either case.
    -we should not start a variable name with upper case letter.(it's just a convention not an error)
    -vaiables that are all in uppercase (convention )are reserved for constants that will never change .
    -make sure that variable names are descriptive.
*we can't name a variable like that (3years) -> it starts with a number
*all the errors that we make in our js code will end up in the console without using console.log() function .
*variables name cannot start with numbers ,
    in fact variable name can only contain numbers, letters , underscore or dollar sign.
    we can't name a variable using the reserved JavaScript keyword.
*let name = 'Jonas' , name is kind of a reserved keyword, but still legal to use.

------------------------------------------------
Data Types:
*in every programming language values can have different types depending on the type of data we want them to hold.
*we already saw strings and numbers. but there's actually more data types.
* in Javascript every value  is either :
    -an object which look something like :
        let me = {
            name : 'Jonas'
        };
    -a premetive value 
        let firstName = 'Jonas'
        let age = 30 ;
*the 7 prinmitive DatA Types:
    1-Number :Floating point Number , Used for decimals and integers --> let age = 23;
    2-String :Sequence of characters , Used for text --> let firstName = 'Jonas'
    3-Boolean :Logical type that can only be true or false , using for taking decision --> let fullAge = true;
    * Number , String , Boolean are the most used data type , but there are more ,...
    4-Undefined: Value taken by a variable that is not yet defined('empty value')  ('empty value') let children;
    5-NULL : also means 'empty value'
    6-Symbol (ES2015): value that is unique and cannot be changed (not useful for now)
    7-BigInt(ES2020):Larger integers than the Number can hold

*JavaScript has a feature called dynamic typing : we do not have to manually 
    define data type of the value stored in a variable . Instead data tYPE ARE determined automatically.
    in JavaScript Value has type , Not variable.
    -another application of dynamic typing is that later in our code we can assign  a new value with a different data type to the same variable without a problem

*javaScript programs are executed from top to bottom.
* typeof is a special operator just as (+) or (-) that can be used to show the type of a value.
*to craete a string we can use either double or single quote , the essential is using quotes.
    'Jonas' "Jonas"
    //error "Jonas'
    //error Jonas -> js taught that is a variable so , it will return a ReferenceError
